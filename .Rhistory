step_scale(-Product) %>%
prep() %>%
bake(new_data = cereal_data_2)
cereal_data_3
cereal_data_3 <- cereal_data_3 %>%
relocate(Product, .before = Calories)
cereal_data_3
cereal_data_3
cereal_data_3
ggplot(data = cereal_data_3, mapping = aes(x = Calories)) +
geom_histogram(fill = '#006EA1', color = 'white', bins = 6)
ggplot(data = cereal_data_3, mapping = aes(x = Sodium)) +
geom_histogram(fill = '#006EA1', color = 'white', bins = 6)
ggplot(data = cereal_data_3, mapping = aes(x = Fiber)) +
geom_histogram(fill = '#006EA1', color = 'white', bins = 6)
ggplot(data = cereal_data_3, mapping = aes(x = Carbs)) +
geom_histogram(fill = '#006EA1', color = 'white', bins = 6)
ggplot(data = cereal_data_3, mapping = aes(x = Sugars)) +
geom_histogram(fill = '#006EA1', color = 'white', bins = 6)
cereal_data_3
cereal_data_4 <- cereal_data_3 %>%
select(-Product)
cereal_data_4
kmeans(cereal_data_4, centers = 3, iter.max = 3, nstart = 1)
kmeans(cereal_data_4, centers = 3, iter.max = 3, nstart = 1)
kmeans(cereal_data_4, centers = 3, iter.max = 3, nstart = 1)
summary(kmeans(cereal_data_4, centers = 3, iter.max = 3, nstart = 1))
kmeans(cereal_data_4, 3)
results_kmeans <- kmeans(cereal_data_4, 3)
results_kmeans <- kmeans(cereal_data_4, 6)
results_kmeans
results_kmeans1 <- kmeans(cereal_data_4, 3)
results_kmeans1 <- kmeans(cereal_data_4, 3)
results_kmeans2 <- kmeans(cereal_data_4, 6)
results_kmeans1$size
results_kmeans2$size
results_kmeans1$cluster
cereal_data_4$class
cereal_data_4$class <- NULL
cereal_data_4
cereal_data_4$class
cereal_data_4
results_kmeans1$cluster
plot(cereal_data_4[c("Calories", "Sodium")], col = results_kmeans1$cluster)
plot(cereal_data_4[c("Calories", "Sodium", "Fiber", "Carbs", "Sugars")], col = results_kmeans1$cluster)
plot(cereal_data_4[c("Calories", "Sodium")], col = results_kmeans1$cluster)
plot(cereal_data_4[c("Calories", "Fiber")], col = results_kmeans1$cluster)
plot(cereal_data_4[c("Calories", "Carbs")], col = results_kmeans1$cluster)
plot(cereal_data_4[c("Calories", "Sugars")], col = results_kmeans1$cluster)
plot(cereal_data_4[c("Fiber", "Sodium")], col = results_kmeans1$cluster)
plot(cereal_data_4[c("Sodium", "Fiber")], col = results_kmeans1$cluster)
c1 <- cbind(results_kmeans1$cluster)
c1
library(cluster)
results_kmeans1$cluster
clusplot(cereal_data_4, results_kmeans1$cluster)
set.seed(50)
results_kmeans1 <- kmeans(cereal_data_4, 3)
results_kmeans1$size
results_kmeans1$cluster
plot(cereal_data_4[c("Calories", "Sodium", "Fiber", "Carbs", "Sugars")], col = results_kmeans1$cluster)
c1 <- cbind(results_kmeans1$cluster)
c1
clusplot(cereal_data_4, results_kmeans1$cluster)
clusplot(cereal_data_4, results_kmeans1$cluster, main = "Cereal Data", shade = T, labels = 3, lines = 0)
clusplot(cereal_data_4, results_kmeans1$cluster, main = "Cereal Data", shade = T, labels = 1, lines = 0)
clusplot(cereal_data_4, results_kmeans1$cluster, main = "Cereal Data", shade = T, labels = 1, lines = 0)
clusplot(cereal_data_4, results_kmeans1$cluster, main = "Cereal Data", shade = T, labels = 1, lines = 0)
clusplot(cereal_data_4, results_kmeans1$cluster, main = "Cereal Data", shade = T, labels = 1, lines = 0)
results_kmeans1$betweenss
set.seed(50)
results_kmeans1 <- kmeans(cereal_data_4, 3)
clusplot(cereal_data_4, results_kmeans1$cluster, main = "Cereal Data", shade = T, labels = 1, lines = 0)
my_dist <- dist(cereal_data_4, method = "euclidean")
my_dist
print(my_dist)
fit <- hclust(my_dist, method = "ward.D2")
fit
cereal_data_3
my_dist <- dist(cereal_data_3[c("Calories", "Sodium", "Fiber", "Carbs", "Sugars")], method = "euclidean")
print(my_dist)
fit <- hclust(my_dist, method = "ward.D2")
plot(fit)
fit$height
plot(fit)
length(cereal_data_3)
length(cereal_data_3$Product)
dendogram_height = 0
for (i in 2:length(cereal_data_3$Product)) {
dendogram_height[i] <- fit$height[i - 1]
}
dendogram_height
plot(1:cereal_data_3$Product, dendogram_height, type = b)
plot(1:length(cereal_data_3$Product), dendogram_height, type = b)
plot(1:length(cereal_data_3$Product), dendogram_height, type = "b")
plot(length(cereal_data_3$Product):1, dendogram_height, type = "b")
dendogram_height
dendogram_height
plot(length(cereal_data_3$Product):20, dendogram_height, type = "b")
plot(length(cereal_data_3$Product):1, dendogram_height, type = "b")
plot(length(cereal_data_3$Product):10, dendogram_height, type = "b")
plot(length(cereal_data_3$Product):1, dendogram_height, type = "b")
plot(fit)
c1
results_kmeans1$cluster
results_kmeans1$betweenss
results_kmeans1$size
plot(cereal_data_4[c("Calories", "Sodium", "Fiber", "Carbs", "Sugars")], col = results_kmeans1$cluster)
plot(fit)
plot(length(cereal_data_3$Product):1, dendogram_height, type = "b")
length(cereal_data_3$Product)
plot(cereal_data_4[c("Calories", "Sodium", "Fiber", "Carbs", "Sugars")], col = results_kmeans1$cluster)
c1 <- cbind(results_kmeans1$cluster)
c1
clusplot(cereal_data_4, results_kmeans1$cluster, main = "Cereal Data", shade = T, labels = 1, lines = 0)
plot(length(cereal_data_3$Product):1, dendogram_height, type = "b")
results_kmeans1
set.seed(100)
fit <- hclust(my_dist, method = "ward.D2")
#display the dendogram
plot(fit)
set.seed(100)
fit <- hclust(my_dist, method = "ward.D2")
#display the dendogram
plot(fit)
#create the scree plot
dendogram_height = 0
for (i in 2:length(cereal_data_3$Product)) {
dendogram_height[i] <- fit$height[i - 1]
}
plot(length(cereal_data_3$Product):1, dendogram_height, type = "b")
set.seed(150)
fit <- hclust(my_dist, method = "ward.D2")
#display the dendogram
plot(fit)
#create the scree plot
dendogram_height = 0
for (i in 2:length(cereal_data_3$Product)) {
dendogram_height[i] <- fit$height[i - 1]
}
plot(length(cereal_data_3$Product):1, dendogram_height, type = "b")
set.seed(150)
fit <- hclust(my_dist, method = "ward.D2")
#display the dendogram
plot(fit)
set.seed(300)
fit <- hclust(my_dist, method = "ward.D2")
#display the dendogram
plot(fit)
#create the scree plot
dendogram_height = 0
for (i in 2:length(cereal_data_3$Product)) {
dendogram_height[i] <- fit$height[i - 1]
}
plot(length(cereal_data_3$Product):1, dendogram_height, type = "b")
#obtain the distance matrix
set.seed(300)
my_dist <- dist(cereal_data_3[c("Calories", "Sodium", "Fiber", "Carbs", "Sugars")], method = "euclidean")
print(my_dist)
#apply the hierarchical clustering
fit <- hclust(my_dist, method = "ward.D2")
#display the dendogram
plot(fit)
#create the scree plot
dendogram_height = 0
for (i in 2:length(cereal_data_3$Product)) {
dendogram_height[i] <- fit$height[i - 1]
}
plot(length(cereal_data_3$Product):1, dendogram_height, type = "b")
set.seed(10)
fit <- hclust(my_dist, method = "ward.D2")
#display the dendogram
plot(fit)
#create the scree plot
dendogram_height = 0
for (i in 2:length(cereal_data_3$Product)) {
dendogram_height[i] <- fit$height[i - 1]
}
plot(length(cereal_data_3$Product):1, dendogram_height, type = "b")
#obtain the distance matrix
my_dist <- dist(cereal_data_3[c("Calories", "Sodium", "Fiber", "Carbs", "Sugars")], method = "euclidean")
print(my_dist)
#apply the hierarchical clustering
set.seed(10)
fit <- hclust(my_dist, method = "ward.D2")
#display the dendogram
plot(fit)
#create the scree plot
dendogram_height = 0
for (i in 2:length(cereal_data_3$Product)) {
dendogram_height[i] <- fit$height[i - 1]
}
plot(length(cereal_data_3$Product):1, dendogram_height, type = "b")
#apply the hierarchical clustering
set.seed(400)
fit <- hclust(my_dist, method = "ward.D2")
#display the dendogram
plot(fit)
#create the scree plot
dendogram_height = 0
for (i in 2:length(cereal_data_3$Product)) {
dendogram_height[i] <- fit$height[i - 1]
}
plot(length(cereal_data_3$Product):1, dendogram_height, type = "b")
#obtain the distance matrix
my_dist <- dist(cereal_data_3[c("Calories", "Sodium", "Fiber", "Carbs", "Sugars")], method = "euclidean")
print(my_dist)
#apply the hierarchical clustering
set.seed(230)
fit <- hclust(my_dist, method = "ward.D2")
#display the dendogram
plot(fit)
#create the scree plot
dendogram_height = 0
for (i in 2:length(cereal_data_3$Product)) {
dendogram_height[i] <- fit$height[i - 1]
}
plot(length(cereal_data_3$Product):1, dendogram_height, type = "b")
#obtain the distance matrix
my_dist <- dist(cereal_data_3[c("Calories", "Sodium", "Fiber", "Carbs", "Sugars")], method = "euclidean")
print(my_dist)
#apply the hierarchical clustering
set.seed(1000)
fit <- hclust(my_dist, method = "ward.D2")
#display the dendogram
plot(fit)
#create the scree plot
dendogram_height = 0
for (i in 2:length(cereal_data_3$Product)) {
dendogram_height[i] <- fit$height[i - 1]
}
plot(length(cereal_data_3$Product):1, dendogram_height, type = "b")
#apply the hierarchical clustering
set.seed(350)
fit <- hclust(my_dist, method = "ward.D2")
#display the dendogram
plot(fit)
#create the scree plot
dendogram_height = 0
for (i in 2:length(cereal_data_3$Product)) {
dendogram_height[i] <- fit$height[i - 1]
}
plot(length(cereal_data_3$Product):1, dendogram_height, type = "b")
#apply the hierarchical clustering
set.seed(1)
fit <- hclust(my_dist, method = "ward.D2")
#display the dendogram
plot(fit)
#create the scree plot
dendogram_height = 0
for (i in 2:length(cereal_data_3$Product)) {
dendogram_height[i] <- fit$height[i - 1]
}
plot(length(cereal_data_3$Product):1, dendogram_height, type = "b")
set.seed(12)
hclust(my_dist, method = "ward.D2")
set.seed(100)
hclust(my_dist, method = "ward.D2")
fit <- hclust(my_dist, method = "ward.D2")
#display the dendogram
plot(fit)
#apply the hierarchical clustering
set.seed(2)
hclust(my_dist, method = "ward.D2")
fit <- hclust(my_dist, method = "ward.D2")
#display the dendogram
plot(fit)
#create the scree plot
dendogram_height = 0
for (i in 2:length(cereal_data_3$Product)) {
dendogram_height[i] <- fit$height[i - 1]
}
plot(length(cereal_data_3$Product):1, dendogram_height, type = "b")
plot(length(cereal_data_3$Product):1, dendogram_height, type = "b")
cereal_data_2
cereal_data_2 <- cereal_data %>%
select(Calories, Sodium, Fiber, Carbs, Sugars)
cereal_data_2
cereal_data_3 <- scale(cereal_data_2)
cereal_data_3
ggplot(data = cereal_data_3, mapping = aes(x = Calories)) +
geom_histogram(fill = '#006EA1', color = 'white', bins = 6)
cereal_data_3
cereal_data_3 <- as.data.frame(cereal_data_3)
cereal_data_3
ggplot(data = cereal_data_3, mapping = aes(x = Calories)) +
geom_histogram(fill = '#006EA1', color = 'white', bins = 6)
#obtain the distance matrix
my_dist <- dist(cereal_data_3[c("Calories", "Sodium", "Fiber", "Carbs", "Sugars")], method = "euclidean")
print(my_dist)
#apply the hierarchical clustering
set.seed(2)
hclust(my_dist, method = "ward.D2")
fit <- hclust(my_dist, method = "ward.D2")
#display the dendogram
plot(fit)
#create the scree plot
dendogram_height = 0
for (i in 2:length(cereal_data_3$Product)) {
dendogram_height[i] <- fit$height[i - 1]
}
plot(length(cereal_data_3$Product):1, dendogram_height, type = "b")
length(cereal_data_3$Product)
length(cereal_data_3$Calories)
#obtain the distance matrix
my_dist <- dist(cereal_data_3[c("Calories", "Sodium", "Fiber", "Carbs", "Sugars")], method = "euclidean")
print(my_dist)
#apply the hierarchical clustering
set.seed(2)
hclust(my_dist, method = "ward.D2")
fit <- hclust(my_dist, method = "ward.D2")
#display the dendogram
plot(fit)
#create the scree plot
dendogram_height = 0
for (i in 2:length(cereal_data_3$Calories)) {
dendogram_height[i] <- fit$height[i - 1]
}
plot(length(cereal_data_3$Product):1, dendogram_height, type = "b")
plot(length(cereal_data_3$Product):1, dendogram_height, type = "b")
plot(length(cereal_data_3$Calories):1, dendogram_height, type = "b")
cereal_data_3
#obtain the distance matrix
my_dist <- dist(cereal_data_3[c("Calories", "Sodium", "Fiber", "Carbs", "Sugars")], method = "euclidean")
print(my_dist)
#apply the hierarchical clustering
set.seed(100)
hclust(my_dist, method = "ward.D2")
fit <- hclust(my_dist, method = "ward.D2")
#display the dendogram
plot(fit)
#create the scree plot
dendogram_height = 0
for (i in 2:length(cereal_data_3$Calories)) {
dendogram_height[i] <- fit$height[i - 1]
}
plot(length(cereal_data_3$Calories):1, dendogram_height, type = "b")
#apply the hierarchical clustering
set.seed(200)
hclust(my_dist, method = "ward.D2")
fit <- hclust(my_dist, method = "ward.D2")
#display the dendogram
plot(fit)
#create the scree plot
dendogram_height = 0
for (i in 2:length(cereal_data_3$Calories)) {
dendogram_height[i] <- fit$height[i - 1]
}
plot(length(cereal_data_3$Calories):1, dendogram_height, type = "b")
#apply the hierarchical clustering
set.seed(400)
hclust(my_dist, method = "ward.D2")
fit <- hclust(my_dist, method = "ward.D2")
#display the dendogram
plot(fit)
#create the scree plot
dendogram_height = 0
for (i in 2:length(cereal_data_3$Calories)) {
dendogram_height[i] <- fit$height[i - 1]
}
plot(length(cereal_data_3$Calories):1, dendogram_height, type = "b")
#obtain the distance matrix
my_dist <- dist(cereal_data_3[c("Calories", "Sodium", "Fiber", "Carbs", "Sugars")], method = "euclidean")
print(my_dist)
#apply the hierarchical clustering
set.seed(400)
hclust(my_dist, method = "ward.D2")
fit <- hclust(my_dist, method = "ward.D2")
#display the dendogram
plot(fit)
#create the scree plot
dendogram_height = 0
for (i in 2:length(cereal_data_3$Calories)) {
dendogram_height[i] <- fit$height[i - 1]
}
plot(length(cereal_data_3$Calories):1, dendogram_height, type = "b")
#obtain the distance matrix
my_dist <- dist(cereal_data_3[c("Calories", "Sodium", "Fiber", "Carbs", "Sugars")], method = "euclidean")
print(my_dist)
#apply the hierarchical clustering
set.seed(2)
hclust(my_dist, method = "ward.D2")
fit <- hclust(my_dist, method = "ward.D2")
#display the dendogram
plot(fit)
#create the scree plot
dendogram_height = 0
for (i in 2:length(cereal_data_3$Calories)) {
dendogram_height[i] <- fit$height[i - 1]
}
plot(length(cereal_data_3$Calories):1, dendogram_height, type = "b")
dendogram_height
#####################################################################################
#as the id product is not used at all, then we drop it
#cereal_data_4 <- cereal_data_3 %>%
#    select(-Product)
#obtain the distance matrix
my_dist <- dist(cereal_data_3[c("Calories", "Sodium", "Fiber", "Carbs", "Sugars")], method = "euclidean")
print(my_dist)
#apply the hierarchical clustering
set.seed(2)
hclust(my_dist, method = "ward.D2")
fit <- hclust(my_dist, method = "ward.D2")
#display the dendogram
plot(fit)
#create the scree plot
dendogram_height = 0
for (i in 2:length(cereal_data_3$Calories)) {
dendogram_height[i] <- fit$height[i - 1]
}
plot(length(cereal_data_3$Calories):1, dendogram_height, type = "b")
#####################################################################################
#apply the hierarchical clustering
set.seed(2)
hclust(my_dist, method = "average")
fit <- hclust(my_dist, method = "average")
#display the dendogram
plot(fit)
#create the scree plot
dendogram_height = 0
for (i in 2:length(cereal_data_3$Calories)) {
dendogram_height[i] <- fit$height[i - 1]
}
plot(length(cereal_data_3$Calories):1, dendogram_height, type = "b")
set.seed(50)
results_kmeans1 <- kmeans(cereal_data_3, 3)
#apply the hierarchical clustering
set.seed(100)
hclust(my_dist, method = "average")
fit <- hclust(my_dist, method = "average")
#display the dendogram
plot(fit)
#create the scree plot
dendogram_height = 0
for (i in 2:length(cereal_data_3$Calories)) {
dendogram_height[i] <- fit$height[i - 1]
}
plot(length(cereal_data_3$Calories):1, dendogram_height, type = "b")
#apply the hierarchical clustering
set.seed(100)
hclust(my_dist, method = "average")
fit <- hclust(my_dist, method = "average")
#display the dendogram
plot(fit)
#create the scree plot
dendogram_height = 0
for (i in 2:length(cereal_data_3$Calories)) {
dendogram_height[i] <- fit$height[i - 1]
}
plot(length(cereal_data_3$Calories):1, dendogram_height, type = "b")
#the 2 dimensional clustering plot
library(cluster)
clusplot(cereal_data_3, results_kmeans1$cluster, main = "Cereal Data", shade = T, labels = 1, lines = 0)
results_kmeans1
set.seed(123)
# function to compute total within-cluster sum of square
wss <- function(k) {
kmeans(cereal_data_3, k, nstart = 10 )$tot.withinss
}
# Compute and plot wss for k = 1 to k = 15
k.values <- 1:15
# extract wss for 2-15 clusters
wss_values <- map_dbl(k.values, wss)
plot(k.values, wss_values,
type="b", pch = 19, frame = FALSE,
xlab="Number of clusters K",
ylab="Total within-clusters sum of squares")
set.seed(123)
# function to compute total within-cluster sum of square
wss <- function(k) {
kmeans(cereal_data_3, k)$tot.withinss
}
# Compute and plot wss for k = 1 to k = 15
k.values <- 1:15
# extract wss for 2-15 clusters
wss_values <- map_dbl(k.values, wss)
plot(k.values, wss_values,
type="b", pch = 19, frame = FALSE,
xlab="Number of clusters K",
ylab="Total within-clusters sum of squares")
plot(length(cereal_data_3$Calories):1, dendogram_height, type = "b")
plot(k.values, wss_values,
type="b", pch = 19, frame = FALSE,
xlab="Number of clusters K",
ylab="Total within-clusters sum of squares")
cereal_data_3
ggplot(data = cereal_data_3, mapping = aes(x = Calories)) +
geom_histogram(fill = '#006EA1', color = 'white', bins = 6)
ggplot(data = cereal_data_3, mapping = aes(x = Sodium)) +
geom_histogram(fill = '#006EA1', color = 'white', bins = 6)
ggplot(data = cereal_data_3, mapping = aes(x = Fiber)) +
geom_histogram(fill = '#006EA1', color = 'white', bins = 6)
ggplot(data = cereal_data_3, mapping = aes(x = Carbs)) +
geom_histogram(fill = '#006EA1', color = 'white', bins = 6)
ggplot(data = cereal_data_3, mapping = aes(x = Sugars)) +
geom_histogram(fill = '#006EA1', color = 'white', bins = 6)
plot(length(cereal_data_3$Calories):1, dendogram_height, type = "b")
plot(fit)
plot(length(cereal_data_3$Calories):1, dendogram_height, type = "b")
plot(k.values, wss_values,
type="b", pch = 19, frame = FALSE,
xlab="Number of clusters K",
ylab="Total within-clusters sum of squares")
clusplot(cereal_data_3, results_kmeans1$cluster, main = "Cereal Data", shade = T, labels = 1, lines = 0)
plot(length(cereal_data_3$Calories):1, dendogram_height, type = "b")
results_kmeans1$cluster
results_kmeans1$size
results_kmeans1$tot.withinss
clusplot(cereal_data_3, results_kmeans1$cluster, main = "Cereal Data", shade = T, labels = 1, lines = 0)
results_kmeans1$iter
results_kmeans1$centers
cereal_data_3
